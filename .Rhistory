mutate(type = if_else(variants != "italic", "wght", "italic")) %>%
mutate(raw = if_else(type == "wght", paste0(0, ",", weight), paste0(1, ",",  weight))) %>%
group_by(family,type) %>%
print(n = 100)
tibble(
family = fonts$items %>% map(~ pluck(.x, "family")) %>% list_c(),
variants = fonts$items %>% map(~ pluck(.x, "variants")),
category = fonts$items %>% map(~ pluck(.x, "category")) %>% list_c()
) %>%
unnest(variants) %>%
unnest(variants) %>%
mutate(weight = str_extract(variants, "\\d*")) %>%
mutate(weight = if_else(weight == "", "400", weight)) %>%
mutate(variants = str_replace(variants, "(\\d{3})italic", "italic")) %>%
mutate(type = if_else(variants != "italic", "wght", "italic")) %>%
mutate(raw = if_else(type == "wght", paste0(0, ",", weight), paste0(1, ",",  weight))) %>%
group_by(family,type) %>%
mutate(raw = paste0(raw, collapse = ";")) %>%
print(n = 100)
tibble(
family = fonts$items %>% map(~ pluck(.x, "family")) %>% list_c(),
variants = fonts$items %>% map(~ pluck(.x, "variants")),
category = fonts$items %>% map(~ pluck(.x, "category")) %>% list_c()
) %>%
unnest(variants) %>%
unnest(variants) %>%
mutate(weight = str_extract(variants, "\\d*")) %>%
mutate(weight = if_else(weight == "", "400", weight)) %>%
mutate(variants = str_replace(variants, "(\\d{3})italic", "italic")) %>%
mutate(type = if_else(variants != "italic", "wght", "italic")) %>%
mutate(raw = if_else(type == "wght", paste0(0, ",", weight), paste0(1, ",",  weight))) %>%
group_by(family,type) %>%
summarise(raw = paste0(raw, collapse = ";")) %>%
group_by(family) %>%
summarise(raw = paste0(raw, collapse = ";")) %>%
print(n = 100)
tibble(
family = fonts$items %>% map(~ pluck(.x, "family")) %>% list_c(),
variants = fonts$items %>% map(~ pluck(.x, "variants")),
category = fonts$items %>% map(~ pluck(.x, "category")) %>% list_c()
) %>%
unnest(variants) %>%
unnest(variants) %>%
mutate(weight = str_extract(variants, "\\d*")) %>%
mutate(weight = if_else(weight == "", "400", weight)) %>%
mutate(variants = str_replace(variants, "(\\d{3})italic", "italic")) %>%
mutate(type = if_else(variants != "italic", "wght", "italic")) %>%
mutate(raw = if_else(type == "wght", paste0(0, ",", weight), paste0(1, ",",  weight))) %>%
group_by(family) %>%
summarise(raw = paste0(raw, collapse = ";")) %>%
print(n = 100)
tibble(
family = fonts$items %>% map(~ pluck(.x, "family")) %>% list_c(),
variants = fonts$items %>% map(~ pluck(.x, "variants")),
category = fonts$items %>% map(~ pluck(.x, "category")) %>% list_c()
) %>%
unnest(variants) %>%
unnest(variants) %>%
mutate(weight = str_extract(variants, "\\d*")) %>%
mutate(weight = if_else(weight == "", "400", weight)) %>%
mutate(variants = str_replace(variants, "(\\d{3})italic", "italic")) %>%
mutate(type = if_else(variants != "italic", "wght", "italic")) %>%
mutate(raw = if_else(type == "wght", paste0(0, ",", weight), paste0(1, ",",  weight))) %>%
group_by(family) %>%
summarise(raw = paste0(raw, collapse = ";")) %>%
mutate(raw = paste0(":ital,wght@", raw)) %>%
print(n = 100)
tibble(
family = fonts$items %>% map(~ pluck(.x, "family")) %>% list_c(),
variants = fonts$items %>% map(~ pluck(.x, "variants")),
category = fonts$items %>% map(~ pluck(.x, "category")) %>% list_c()
) %>%
unnest(variants) %>%
unnest(variants) %>%
mutate(weight = str_extract(variants, "\\d*")) %>%
mutate(weight = if_else(weight == "", "400", weight)) %>%
mutate(variants = str_replace(variants, "(\\d{3})italic", "italic")) %>%
mutate(type = if_else(variants != "italic", "wght", "italic")) %>%
mutate(raw = if_else(type == "wght", paste0(0, ",", weight), paste0(1, ",",  weight))) %>%
# group_by(family, type) %>%
# summarise(raw = paste0(raw, collapse = ";")) %>%
group_by(family) %>%
summarise(raw = paste0(raw, collapse = ";")) %>%
print(n = 100)
tibble(
family = fonts$items %>% map(~ pluck(.x, "family")) %>% list_c(),
variants = fonts$items %>% map(~ pluck(.x, "variants")),
category = fonts$items %>% map(~ pluck(.x, "category")) %>% list_c()
) %>%
unnest(variants) %>%
unnest(variants) %>%
mutate(weight = str_extract(variants, "\\d*")) %>%
mutate(weight = if_else(weight == "", "400", weight)) %>%
mutate(variants = str_replace(variants, "(\\d{3})italic", "italic")) %>%
mutate(type = if_else(variants != "italic", "wght", "ital")) %>%
mutate(raw = if_else(type == "wght", paste0(0, ",", weight), paste0(1, ",",  weight))) %>%
# group_by(family, type) %>%
# summarise(raw = paste0(raw, collapse = ";")) %>%
group_by(family) %>%
summarise(raw = paste0(raw, collapse = ";"),
types = paste0(type, collapse = ",")) %>%
mutate(raw = if_else(str_detect(raw, "1,"), paste0(":ital,wght@", raw),  paste0("wght@", raw))) %>%
print(n = 100)
tibble(
family = fonts$items %>% map(~ pluck(.x, "family")) %>% list_c(),
variants = fonts$items %>% map(~ pluck(.x, "variants")),
category = fonts$items %>% map(~ pluck(.x, "category")) %>% list_c()
) %>%
unnest(variants) %>%
unnest(variants) %>%
mutate(weight = str_extract(variants, "\\d*")) %>%
mutate(weight = if_else(weight == "", "400", weight)) %>%
mutate(variants = str_replace(variants, "(\\d{3})italic", "italic")) %>%
mutate(type = if_else(variants != "italic", "wght", "ital")) %>%
mutate(raw = if_else(type == "wght", paste0(0, ",", weight), paste0(1, ",",  weight))) %>%
# group_by(family, type) %>%
# summarise(raw = paste0(raw, collapse = ";")) %>%
group_by(family) %>%
summarise(raw = paste0(raw, collapse = ";"),
types = paste0(type, collapse = ",")) %>%
mutate(raw = if_else(str_detect(raw, "1,"), paste0(":ital,wght@", raw),  paste0("wght@", raw))) %>%
print(n = 100)
tibble(
family = fonts$items %>% map(~ pluck(.x, "family")) %>% list_c(),
variants = fonts$items %>% map(~ pluck(.x, "variants")),
category = fonts$items %>% map(~ pluck(.x, "category")) %>% list_c()
) %>%
unnest(variants) %>%
unnest(variants) %>%
mutate(weight = str_extract(variants, "\\d*")) %>%
mutate(weight = if_else(weight == "", "400", weight)) %>%
mutate(variants = str_replace(variants, "(\\d{3})italic", "italic")) %>%
mutate(type = if_else(variants != "italic", "wght", "ital")) %>%
mutate(raw = if_else(type == "wght", paste0(0, ",", weight), paste0(1, ",",  weight))) %>%
# group_by(family, type) %>%
# summarise(raw = paste0(raw, collapse = ";")) %>%
group_by(family) %>%
summarise(raw = paste0(raw, collapse = ";"),
types = paste0(unique(type), collapse = ",")) %>%
mutate(raw = if_else(str_detect(raw, "1,"), paste0(":ital,wght@", raw),  paste0("wght@", raw))) %>%
print(n = 100)
tibble(
family = fonts$items %>% map(~ pluck(.x, "family")) %>% list_c(),
variants = fonts$items %>% map(~ pluck(.x, "variants")),
category = fonts$items %>% map(~ pluck(.x, "category")) %>% list_c()
) %>%
unnest(variants) %>%
unnest(variants) %>%
mutate(weight = str_extract(variants, "\\d*")) %>%
mutate(weight = if_else(weight == "", "400", weight)) %>%
mutate(variants = str_replace(variants, "(\\d{3})italic", "italic")) %>%
mutate(type = if_else(variants != "italic", "wght", "ital")) %>%
mutate(raw = if_else(type == "wght", paste0(0, ",", weight), paste0(1, ",",  weight))) %>%
# group_by(family, type) %>%
# summarise(raw = paste0(raw, collapse = ";")) %>%
group_by(family) %>%
summarise(raw = paste0(raw, collapse = ";"),
types = paste0(unique(type), collapse = ",")) %>%
mutate(raw = if_else(str_detect(raw, "^wght@"), str_remove_all(raw, "0,"), raw)) %>%
mutate(raw = if_else(str_detect(raw, "1,"), paste0(":ital,wght@", raw),  paste0("wght@", raw))) %>%
print(n = 100)
tibble(
family = fonts$items %>% map(~ pluck(.x, "family")) %>% list_c(),
variants = fonts$items %>% map(~ pluck(.x, "variants")),
category = fonts$items %>% map(~ pluck(.x, "category")) %>% list_c()
) %>%
unnest(variants) %>%
unnest(variants) %>%
mutate(weight = str_extract(variants, "\\d*")) %>%
mutate(weight = if_else(weight == "", "400", weight)) %>%
mutate(variants = str_replace(variants, "(\\d{3})italic", "italic")) %>%
mutate(type = if_else(variants != "italic", "wght", "ital")) %>%
mutate(raw = if_else(type == "wght", paste0(0, ",", weight), paste0(1, ",",  weight))) %>%
# group_by(family, type) %>%
# summarise(raw = paste0(raw, collapse = ";")) %>%
group_by(family) %>%
summarise(raw = paste0(raw, collapse = ";"),
types = paste0(unique(type), collapse = ",")) %>%
mutate(raw = if_else(str_detect(raw, "^wght@"), str_remove_all(raw, "0,"), raw))
tibble(
family = fonts$items %>% map(~ pluck(.x, "family")) %>% list_c(),
variants = fonts$items %>% map(~ pluck(.x, "variants")),
category = fonts$items %>% map(~ pluck(.x, "category")) %>% list_c()
) %>%
unnest(variants) %>%
unnest(variants) %>%
mutate(weight = str_extract(variants, "\\d*")) %>%
mutate(weight = if_else(weight == "", "400", weight)) %>%
mutate(variants = str_replace(variants, "(\\d{3})italic", "italic")) %>%
mutate(type = if_else(variants != "italic", "wght", "ital")) %>%
mutate(raw = if_else(type == "wght", paste0(0, ",", weight), paste0(1, ",",  weight))) %>%
# group_by(family, type) %>%
# summarise(raw = paste0(raw, collapse = ";")) %>%
group_by(family) %>%
summarise(raw = paste0(raw, collapse = ";"),
types = paste0(unique(type), collapse = ",")) %>%
mutate(raw = if_else(str_detect(types, "ital"), raw, str_remove_all(raw, "0,")))
tibble(
family = fonts$items %>% map(~ pluck(.x, "family")) %>% list_c(),
variants = fonts$items %>% map(~ pluck(.x, "variants")),
category = fonts$items %>% map(~ pluck(.x, "category")) %>% list_c()
) %>%
unnest(variants) %>%
unnest(variants) %>%
mutate(weight = str_extract(variants, "\\d*")) %>%
mutate(weight = if_else(weight == "", "400", weight)) %>%
mutate(variants = str_replace(variants, "(\\d{3})italic", "italic")) %>%
mutate(type = if_else(variants != "italic", "wght", "ital")) %>%
mutate(raw = if_else(type == "wght", paste0(0, ",", weight), paste0(1, ",",  weight))) %>%
# group_by(family, type) %>%
# summarise(raw = paste0(raw, collapse = ";")) %>%
group_by(family) %>%
summarise(raw = paste0(raw, collapse = ";"),
types = paste0(unique(type), collapse = ",")) %>%
mutate(raw = if_else(str_detect(types, "ital"), raw, str_remove_all(raw, "0,"))) %>%
mutate(raw = if_else(str_detect(types, "ital"), paste0(":ital,wght@", raw),  paste0(":wght@", raw))) %>%
print(n = 100)
tibble(
family = fonts$items %>% map(~ pluck(.x, "family")) %>% list_c(),
variants = fonts$items %>% map(~ pluck(.x, "variants")),
category = fonts$items %>% map(~ pluck(.x, "category")) %>% list_c()
) %>%
unnest(variants) %>%
unnest(variants) %>%
mutate(weight = str_extract(variants, "\\d*")) %>%
mutate(weight = if_else(weight == "", "400", weight)) %>%
mutate(variants = str_replace(variants, "(\\d{3})italic", "italic")) %>%
mutate(type = if_else(variants != "italic", "wght", "ital")) %>%
mutate(raw = if_else(type == "wght", paste0(0, ",", weight), paste0(1, ",",  weight))) %>%
# group_by(family, type) %>%
# summarise(raw = paste0(raw, collapse = ";")) %>%
group_by(family) %>%
summarise(raw = paste0(raw, collapse = ";"),
types = paste0(unique(type), collapse = ",")) %>%
mutate(raw = if_else(str_detect(types, "ital"), raw, str_remove_all(raw, "0,"))) %>%
mutate(raw = if_else(str_detect(types, "ital"), paste0(":ital,wght@", raw),  paste0(":wght@", raw))) %>%
select(family, styles = raw)
google_fonts <- tibble(
family = fonts$items %>% map(~ pluck(.x, "family")) %>% list_c(),
variants = fonts$items %>% map(~ pluck(.x, "variants")),
category = fonts$items %>% map(~ pluck(.x, "category")) %>% list_c()
) %>%
unnest(variants) %>%
unnest(variants) %>%
mutate(weight = str_extract(variants, "\\d*")) %>%
mutate(weight = if_else(weight == "", "400", weight)) %>%
mutate(variants = str_replace(variants, "(\\d{3})italic", "italic")) %>%
mutate(type = if_else(variants != "italic", "wght", "ital")) %>%
mutate(raw = if_else(type == "wght", paste0(0, ",", weight), paste0(1, ",",  weight))) %>%
# group_by(family, type) %>%
# summarise(raw = paste0(raw, collapse = ";")) %>%
group_by(family) %>%
summarise(raw = paste0(raw, collapse = ";"),
types = paste0(unique(type), collapse = ",")) %>%
mutate(raw = if_else(str_detect(types, "ital"), raw, str_remove_all(raw, "0,"))) %>%
mutate(raw = if_else(str_detect(types, "ital"), paste0(":ital,wght@", raw),  paste0(":wght@", raw))) %>%
select(family, styles = raw)
usethis::use_data(google_fonts)
google_fonts
google_fonts
google_fonts
google_fonts %>% filter(family == "Abel")
google_fonts %>% filter(family == "Abel") %>% pull(styles)
google_fonts %>% filter(family == "A1bel") %>% pull(styles)
google_fonts %>% filter(family == "A1bel") %>% pull(styles) %>% length()
google_fonts %>% count(family)
google_fonts %>% count(family) %>% arrange(-n)
pikchr('
/*
Código inicial. Para comentários em linha use \\ ou #
*/
arrow right 200% "Rmarkdown" "Fonte" # teste
box rad 10px "Rmarkdown" "(knitr)" bold  fit
arrow right 200% "HTML+SVG" "Saída"
arrow <-> down from \
last box.s
box same "Pikchr" "(pikchr.c)" bold fit
',
width = "100%",
height = "auto",
align = "center",
fontFamily = "inherit")
pikchr('
/*
Código inicial. Para comentários em linha use \\ ou #
*/
arrow right 200% "Rmarkdown" "Fonte" # teste
box rad 10px "Rmarkdown" "(knitr)" bold  fit
arrow right 200% "HTML+SVG" "Saída"
arrow <-> down from \\
last box.s
box same "Pikchr" "(pikchr.c)" bold fit
',
width = "100%",
height = "auto",
align = "center",
fontFamily = "inherit")
pikchr('
/*
Código inicial. Para comentários em linha use \\ ou #
*/
arrow right 200% "Rmarkdown" "Fonte" # teste
box rad 10px "Rmarkdown" "(knitr)" bold  fit
arrow right 200% "HTML+SVG" "Saída"
arrow <-> down from \\
last box.s
box same "Pikchr" "(pikchr.c)" bold fit
',
width = "100%",
height = "auto",
align = "center",
fontFamily = "Abel")
pikchr('
/*
Código inicial. Para comentários em linha use \\ ou #
*/
arrow right 200% "Rmarkdown" "Fonte" # teste
box rad 10px "Rmarkdown" "(knitr)" bold  fit
arrow right 200% "HTML+SVG" "Saída"
arrow <-> down from \\
last box.s
box same "Pikchr" "(pikchr.c)" bold fit
',
width = "100%",
height = "auto",
align = "center",
fontFamily = "Jost")
pikchr('
/*
Código inicial. Para comentários em linha use \\ ou #
*/
arrow right 200% "Rmarkdown" "Fonte" # teste
box rad 10px "Rmarkdown" "(knitr)" bold  fit
arrow right 200% "HTML+SVG" "Saída"
arrow <-> down from \\
last box.s
box same "Pikchr" "(pikchr.c)" bold fit
',
width = "100%",
height = "auto",
align = "center",
fontFamily = "Jost", svgOnly = TRUE)
pikchr('
/*
Código inicial. Para comentários em linha use \\ ou #
*/
arrow right 200% "Rmarkdown" "Fonte" # teste
box rad 10px "Rmarkdown" "(knitr)" bold  fit
arrow right 200% "HTML+SVG" "Saída"
arrow <-> down from \\
last box.s
box same "Pikchr" "(pikchr.c)" bold fit
',
width = "100%",
height = "auto",
align = "center",
fontFamily = "Jost", svgOnly = TRUE)
pikchr('
/*
Código inicial. Para comentários em linha use \\ ou #
*/
arrow right 200% "Rmarkdown" "Fonte" # teste
box rad 10px "Rmarkdown" "(knitr)" bold  fit
arrow right 200% "HTML+SVG" "Saída"
arrow <-> down from \\
last box.s
box same "Pikchr" "(pikchr.c)" bold fit
',
width = "100%",
height = "auto",
align = "center",
fontFamily = "Jost", svgOnly = TRUE)
google_fonts %>% filter(family == "A1bel") %>% pull(styles) %>% length()
google_fonts %>% filter(family == "Abel") %>% pull(styles) %>% length()
data("google_fonts")
data("google_fonts", package =  "pikchr")
pikchr('
/*
Código inicial. Para comentários em linha use \\ ou #
*/
arrow right 200% "Rmarkdown" "Fonte" # teste
box rad 10px "Rmarkdown" "(knitr)" bold  fit
arrow right 200% "HTML+SVG" "Saída"
arrow <-> down from \\
last box.s
box same "Pikchr" "(pikchr.c)" bold fit
',
width = "100%",
height = "auto",
align = "center",
fontFamily = "Jost", svgOnly = TRUE)
pikchr('
/*
Código inicial. Para comentários em linha use \\ ou #
*/
arrow right 200% "Rmarkdown" "Fonte" # teste
box rad 10px "Rmarkdown" "(knitr)" bold  fit
arrow right 200% "HTML+SVG" "Saída"
arrow <-> down from \\
last box.s
box same "Pikchr" "(pikchr.c)" bold fit
',
width = "100%",
height = "auto",
align = "center",
fontFamily = "Jost", svgOnly = TRUE)
pikchr('
/*
Código inicial. Para comentários em linha use \\ ou #
*/
arrow right 200% "Rmarkdown" "Fonte" # teste
box rad 10px "Rmarkdown" "(knitr)" bold  fit
arrow right 200% "HTML+SVG" "Saída"
arrow <-> down from \\
last box.s
box same "Pikchr" "(pikchr.c)" bold fit
',
width = "100%",
height = "auto",
align = "center",
fontFamily = "Jost", svgOnly = TRUE)
google_fonts
pikchr('
/*
Código inicial. Para comentários em linha use \\ ou #
*/
arrow right 200% "Rmarkdown" "Fonte" # teste
box rad 10px "Rmarkdown" "(knitr)" bold  fit
arrow right 200% "HTML+SVG" "Saída"
arrow <-> down from \\
last box.s
box same "Pikchr" "(pikchr.c)" bold fit
',
width = "100%",
height = "auto",
align = "center",
fontFamily = "Jost")
pikchr('
/*
Código inicial. Para comentários em linha use \\ ou #
*/
arrow right 200% "Rmarkdown" "Fonte" # teste
box rad 10px "Rmarkdown" "(knitr)" bold  fit
arrow right 200% "HTML+SVG" "Saída"
arrow <-> down from \\
last box.s
box same "Pikchr" "(pikchr.c)" bold fit
',
width = "100%",
height = "auto",
align = "center",
fontFamily = "Abel")
pikchr('
/*
Código inicial. Para comentários em linha use \\ ou #
*/
arrow right 200% "Rmarkdown" "Fonte" # teste
box rad 10px "Rmarkdown" "(knitr)" bold  fit
arrow right 200% "HTML+SVG" "Saída"
arrow <-> down from \\
last box.s
box same "Pikchr" "(pikchr.c)" bold fit
',
width = "100%",
height = "auto",
align = "center",
fontFamily = "Montserrat")
pikchr('
/*
Código inicial. Para comentários em linha use \\ ou #
*/
arrow right 200% "Rmarkdown" "Fonte" # teste
box rad 10px "Rmarkdown" "(knitr)" bold  fit
arrow right 200% "HTML+SVG" "Saída"
arrow <-> down from \\
last box.s
box same "Pikchr" "(pikchr.c)" bold fit
',
width = "100%",
height = "auto",
align = "center",
fontFamily = "Montse2rrat")
pikchr('
/*
Código inicial. Para comentários em linha use \\ ou #
*/
arrow right 200% "Rmarkdown" "Fonte" # teste
box rad 10px "Rmarkdown" "(knitr)" bold  fit
arrow right 200% "HTML+SVG" "Saída"
arrow <-> down from \\
last box.s
box same "Pikchr" "(pikchr.c)" bold fit
',
width = "100%",
height = "auto",
align = "center",
fontFamily = "Montse2rrat")
pikchr('
/*
Código inicial. Para comentários em linha use \\ ou #
*/
arrow right 200% "Rmarkdown" "Fonte" # teste
box rad 10px "Rmarkdown" "(knitr)" bold  fit
arrow right 200% "HTML+SVG" "Saída"
arrow <-> down from \\
last box.s
box same "Pikchr" "(pikchr.c)" bold fit
',
width = "100%",
height = "auto",
align = "center",
fontFamily = "Montserrat")
